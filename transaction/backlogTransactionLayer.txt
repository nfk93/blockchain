
OK - What is a node
OK - tree structure of nodes
OK  - store global state for every block
OK - receiving blocks
OK - handling blocks
OK - Update/create new node from parent state
OK - Where to store/use hash of a node, to keep it for later use(next blocks parent)
OK - Use parent ledger instead of creating a new
OK - returning global states

ok - Change key in tree back to hash value of block
ok - Finalization
   ok - return the state of a block
ok - parent hash

Ok - Write tests for forking/branching
OK - Write method to create a block given a set of transactions

OK - Use hash of blocks in gap to create the nonce
Ok - How is the threshold and draw value calculated

OK - BlockNonce are created randomly.
OK - BlockNonce should be updated on finalization

OK - Clean NewBlockData


- Proper validation of everything (blocks -> OK, nonce, proofs, etc.)
- Do validation for transaction in add transaction
    - Comment in the check for sender balance

- Genesis hash skal ikke kunne rammes af hashing functionen
- Create correct GenesisData

- remove hack initialization of Last Finalized from StartTransactionLayer
- Don't create your own genesis, unless you ARE genesis
- Gas?

- Get tests back running
- TEST, TEST, TEST!!

- How does Leadership election access variables in Kontrol?









