
OK - What is a node
OK - tree structure of nodes
OK  - store global state for every block
OK - receiving blocks
OK - handling blocks
OK - Update/create new node from parent state
OK - Where to store/use hash of a node, to keep it for later use(next blocks parent)
OK - Use parent ledger instead of creating a new
OK - returning global states

ok - Change key in tree back to hash value of block
ok - Finalization
   ok - return the state of a block
ok - parent hash

Ok - Write tests for forking/branching
OK - Write method to create a block given a set of transactions

OK - Use hash of blocks in gap to create the nonce
Ok - How is the threshold and draw value calculated

OK - BlockNonce are created randomly.
OK - BlockNonce should be updated on finalization

OK - Clean NewBlockData
OK - Proper initialisation of initial state in genesis block
OK - Do validation for transaction in add transaction
    OK - Comment in the check for sender balance
OK - Genesis hash skal ikke kunne rammes af hashing functionen
OK - Create correct GenesisData
OK - remove hack initialization of Last Finalized from StartTransactionLayer
OK - Get tests back running
OK - Only first instance of genesis should be accepted
    OK - Check ParentHash for Genesis


- Proper validation of everything (blocks -> OK, nonce, proofs, etc.)
- Gas?
- TEST, TEST, TEST!!
- Add tests for AddTransaction in state_test



- Blocks are done
- Leadership election is not tested




